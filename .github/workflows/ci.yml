name: NTH Continuous Integration and Release

on: [push, pull_request, workflow_dispatch]

env:
  DEFAULT_GO_VERSION: ^1.15
  GITHUB_USERNAME: ${{ secrets.EC2_BOT_GITHUB_USERNAME }}
  GITHUB_TOKEN: ${{ secrets.EC2_BOT_GITHUB_TOKEN }}
  WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:

  fastTests:
    name: Fast Tests and Lints
    runs-on: ubuntu-20.04
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Unit Tests
      run: make version

  buildLinux:
    name: Build Linux Binaries
    runs-on: ubuntu-20.04
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Build Linux Binaries
      run: make version

  e2e:
    name: E2E Tests
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        k8sVersion: [1.14, 1.15, 1.16, 1.17, 1.18, 1.19]
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: E2E Tests
      run: make version

  releaseLinux:
    name: Release Linux
    runs-on: ubuntu-20.04
    needs: [e2e, buildLinux, fastTests]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: License Check
      run: make version

    - name: Release Linux Assets
      run: make version
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  release:
    name: Release
    runs-on: ubuntu-20.04
    needs: [releaseLinux]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Create NTH README Update PR
      run: make create-release-prep-pr-readme
